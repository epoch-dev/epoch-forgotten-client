@use 'sass:math';
@import '../../common/styles/variables.scss';
@import '../../common/styles/mixins.scss';

:root {
    overflow: hidden;
}

.signinWrapper {
    @include boxShadow;

    position: relative;
    z-index: 100;
    width: 90%;
    max-width: 40rem;
    margin: 15vh auto;
    padding: 2rem 1rem;
    background: $color-dark;
}

.logoWrapper {
    margin: auto;
    text-align: center;

    img {
        animation: logoShine 5s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
    }
}

@keyframes logoShine {
    0% {
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}

.particleWrapper {
    $particleNum: 125;
    $particleColor: $color-primary;

    position: absolute;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    z-index: 0;

    .particleItem {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        mix-blend-mode: screen;
        background-image: radial-gradient($color-light, $color-primary);
        z-index: 0;

        animation: particleOpacity 500ms infinite, particleScale 3s infinite;

        @keyframes particleOpacity {
            0% {
                opacity: 0.7;
            }
            50% {
                opacity: 0.4;
            }
            100% {
                opacity: 0.7;
            }
        }

        @keyframes particleScale {
            0% {
                transform: scale3d(0.4, 0.4, 1);
            }
            50% {
                transform: scale3d(2.2, 2.2, 1);
            }
            100% {
                transform: scale3d(0.4, 0.4, 1);
            }
        }
    }

    @for $i from 1 through $particleNum {
        &:nth-child(#{$i}) {
            $particleSize: random(5);
            width: $particleSize + px;
            height: $particleSize + px;

            $startPositionY: random(10) + 100;
            $framesName: 'particle-' + $i;
            $moveDuration: 8000 + random(4000) + ms;

            animation-name: #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: random(11000) + ms;

            @keyframes #{$framesName} {
                from {
                    transform: translate3d(#{random(100) + vw}, #{$startPositionY + vh}, 0);
                }

                to {
                    transform: translate3d(#{random(100) + vw}, #{- $startPositionY - random(60) + vh}, 0);
                }
            }

            .particleItem {
                animation-delay: random(4000) + ms;
            }
        }
    }
}
